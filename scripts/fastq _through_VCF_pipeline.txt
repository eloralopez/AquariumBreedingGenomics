
#trim adapters through indexing bamfile (where $1 is the sample identifier)
conda activate gat4k
trimmomatic PE $1_L001_R1_001.fastq.gz $1_L001_R2_001.fastq.gz $1_forward_paired.fq.gz  $1_forward_unpaired.fq.gz $1_reverse_paired.fq.gz $1_reverse_unpaired.fastq.gz ILLUMINACLIP:/home/elopez-nandam/miniconda3/pkgs/trimmomatic-0.39-hdfd78af_2/share/trimmomatic/adapters/TruSeq3-PE.fa:2:30:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:15 MINLEN:36

#map, convert to bam, sort:
conda activate bwa_and_samtools
bwa mem -M -t 2 ~/Ahyacinthusv1reference/annotationsv1/Ahyacinthus.chrsV1.fasta $1_forward_paired.fq.gz $1_reverse_paired.fq.gz 2> bwa_$1.err | samtools view -bS | samtools sort > $1.UNDEDUP.bam

#mark duplicates:
conda activate gat4k
picard MarkDuplicates REMOVE_DUPLICATES=true INPUT=$1.UNDEDUP.bam OUTPUT=$1.bam METRICS_FILE=./picardmetrics/$1.metrics.txt VALIDATION_STRINGENCY=LENIENT -XX:ParallelGCThreads=3

#add RG:
conda activate gat4k
picard AddOrReplaceReadGroups \
    I= $1.bam \
    O= $1_RG.bam \
    RGLB= $1 \
    RGSM= $1 \
    RGPL= ILLUMINA \
    RGPU= 1

#index with new RG:
conda activate bwa_and_samtools
samtools index $1_RG.bam

#haplotypecall (where $1 is the sample identifier and $2 is the chromosome):

conda activate gat4k
gatk HaplotypeCaller \
    -R  ~/Ahyacinthusv1reference/annotationsv1/Ahyacinthus.chrsV1.fasta \
    -I $1_RG.bam \
    -ERC GVCF \
    -L $2 \
    -O $1_$2.g.vcf

#combine VCFs through filtering down to biSNPs (where $1 is the chromosome)
 conda activate gat4k
 gatk CombineGVCFs \
     -R ~/Ahyacinthusv1reference/annotationsv1/Ahyacinthus.chrsV1.fasta \
     --variant CA2019-10_S114_$1.g.vcf \
     --variant CA2019-11_S115_$1.g.vcf \
     --variant CA2019-12_S116_$1.g.vcf \
     --variant CA2019-13_S117_$1.g.vcf \
     --variant CA2019-14_S118_$1.g.vcf \
     --variant CA2019-15_S119_$1.g.vcf \
     --variant CA2019-16_S120_$1.g.vcf \
     --variant CA2019-17_S121_$1.g.vcf \
     --variant CA2019-18_S122_$1.g.vcf \
     --variant CA2019-19_S123_$1.g.vcf \
     --variant CA2019-1_S105_$1.g.vcf \
     --variant CA2019-20_S124_$1.g.vcf \
     --variant CA2019-21_S125_$1.g.vcf \
     --variant CA2019-22_S126_$1.g.vcf \
     --variant CA2019-24_S127_$1.g.vcf \
     --variant CA2019-2_S106_$1.g.vcf \
     --variant CA2019-3_S107_$1.g.vcf \
     --variant CA2019-4_S108_$1.g.vcf \
     --variant CA2019-5_S109_$1.g.vcf \
     --variant CA2019-6_S110_$1.g.vcf \
     --variant CA2019-7_S111_$1.g.vcf \
     --variant CA2019-8_S112_$1.g.vcf \
      --variant CA2019-9_S113_$1.g.vcf \
      --variant CA2020-10_S104_$1.g.vcf \
      --variant CA2020-1_S95_$1.g.vcf \
      --variant CA2020-2_S96_$1.g.vcf \
      --variant CA2020-4_S98_$1.g.vcf \
      --variant CA2020-5_S99_$1.g.vcf \
      --variant CA2020-6_S100_$1.g.vcf \
      --variant CA2020-7_S101_$1.g.vcf \
      --variant CA2020-8_S102_$1.g.vcf \
      --variant CA2020-9_S103_$1.g.vcf \
      --variant CA57_S89_$1.g.vcf \
      --variant CA58_S90_$1.g.vcf \
      --variant CA62_S91_$1.g.vcf \
      --variant CA70_S84_$1.g.vcf \
      --variant CA71_S85_$1.g.vcf \
      --variant CA72_S86_$1.g.vcf \
      --variant CA73_S87_$1.g.vcf \
      --variant CA76_S92_$1.g.vcf \
      --variant CA77_S93_$1.g.vcf \
      --variant CA79_S94_$1.g.vcf \
      --variant CA80_S88_$1.g.vcf \
      --variant CAP12-1_S46_$1.g.vcf \
      --variant CAP22-2_S59_$1.g.vcf \
      --variant CAP9-1_S48_$1.g.vcf \
      --variant DTG-OmniC-238_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-11_S11_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-12_S12_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-13_S13_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-14_S14_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-15_S15_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-16_S16_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-3_S10_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-7_S17_$1.g.vcf \
      --variant ../December2021_spawn/CA2020-8_S18_$1.g.vcf \
      -L $1 \
      -O CSLparentsandF1_20220617_$1.g.vcf

#   ##genotypeGVCFs (allsites):
   gatk GenotypeGVCFs \
           -R ~/Ahyacinthusv1reference/annotationsv1/Ahyacinthus.chrsV1.fasta \
           --variant CSLparentsandF1_20220617_$1.g.vcf \
           --include-non-variant-sites \
           -O CSLparentsandF1_20220617_$1_allsites_genotyped.g.vcf
#
#   ##remove sites with missing genotypes:
   grep -vF './.' CSLparentsandF1_20220617_$1_allsites_genotyped.g.vcf | grep -vF '.|.' > CSLparentsandF1_20220617_$1_allsites_genotyped_nomissing.vcf


  ##remove sites where QUAL (for nonvariant sites) or GQ (for variant sites) is less than 30:
  conda activate bcftools
  bcftools filter --include 'FORMAT/DP>10 && GQ>30' CSLparentsandF1_20220617_$1_allsites_genotyped_nomissing.vcf > CSLparentsandF1_20220617_$1_allsites_genotyped_nomissing_dp10gq30.vcf

  #keep just biallelic SNPs:
  bcftools view -m2 -M2 -v snps CSLparentsandF1_20220617_$1_allsites_genotyped_nomissing_dp10gq30.vcf > CSLparentsandF1_20220617_$1_allsites_genotyped_nomissing_dp10gq30_biSNPs.vcf

  #
  Generating plink IBD file:
  plink --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs.vcf --genome full --allow-extra-chr &

  conda activate vcftools
vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs.vcf --remove exclude_list --recode --out CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups &
########where the exclude_list has 2020-7_S114 and 2020-8_S115
#identify singletons:
vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups.recode.vcf --singletons --out singletonfile202206 &
#create list of positions to exclude:
awk '{print $1" "$2}' singletonfile202206.singletons > singletons_exclude_positions_list
##exclude positions that have singletons:
vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups.recode.vcf --exclude-positions singletons_exclude_positions_list --recode --recode-INFO-all --out CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons &
#plink on the file with two indivs and singletons removed:
plink --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf --genome full --allow-extra-chr &

#annotate with snpeff:
conda activate snpeff
snpEff -v -c /home/elopez-nandam/miniconda3/pkgs/snpeff-5.0-hdfd78af_1/share/snpeff-5.0-1/snpEff.config Ahyacinthus CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf > CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf &

#generate Fst files:
vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --weir-fst-pop listF1_2020 --weir-fst-pop ../listF0_2020 --out F1_vs_F0_2020 &

vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --weir-fst-pop ../listF1_2019 --weir-fst-pop ../listF0_2019 --out F1_vs_F0_2019 &

#subset vcf to just each set, then calculate allele freqs for each set
conda activate vcftools
vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --keep ../listF1_2019 --out F1_2019
conda activate plink2
plink2 --vcf F1_2019.recode.vcf --freq cols=+pos --out F1_2019

conda activate vcftools
vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --keep ../listF0_2019 --out F0_2019
conda activate plink2
plink2 --vcf F0_2019.recode.vcf --freq cols=+pos --out F0_2019

conda activate vcftools
vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --keep listF1_2020 --out F1_2020
conda activate plink2
plink2 --vcf F1_2020.recode.vcf --freq cols=+pos --out F1_2020

conda activate vcftools
vcftools --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --keep ../listF0_2020 --out F0_2020
conda activate plink2
plink2 --vcf F0_2020.recode.vcf --freq cols=+pos --out F0_2020

#find shared outliers:
Rscript fourpanelplot.R 

#filter VCF to just the 887 sharedoutliers
python3 filterVCFtojustoutliers.py trulysharedoutliers20220622.txt.ann.txt CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf > CSL_GATHERED_just887.ann.vcf

#create vcf of the big family F0s:
conda activate vcftools
vcftools --keep ../listF0_2019_bigfamily --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out bigfamily2019_allsnps_F0 &
vcftools --keep ../listF0_2019_bigfamily --vcf CSL_GATHERED_just887.ann.vcf --recode --out bigfamily2019_just887_F0 &

vcftools --keep ../listF1_2019_bigfamily --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out bigfamily2019_allsnps_F1 &
vcftools --keep ../listF1_2019_bigfamily --vcf CSL_GATHERED_just887.ann.vcf --recode --out bigfamily2019_just887_F1 &

vcftools --keep ../listF0_2020_foursibs --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out bigfamily2020_allsnps_F0 &
vcftools --keep ../listF0_2020_foursibs --vcf CSL_GATHERED_just887.ann.vcf --recode --out bigfamily2020_just887_F0 &

vcftools --keep listF1_2020_sixsibs --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out bigfamily2020_allsnps_F1 &
vcftools --keep listF1_2020_sixsibs --vcf CSL_GATHERED_just887.ann.vcf --recode --out bigfamily2020_just887_F1 &

#vcf of ALL F0S
vcftools --keep ../listF0 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out F0_allsnps &
vcftools --keep ../listF0 --vcf CSL_GATHERED_just887.ann.vcf --recode --out F0_just887 &

#VCF of ALL F1s
vcftools --keep listF1 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out F1_allsnps &
vcftools --keep listF1 --vcf CSL_GATHERED_just887.ann.vcf --recode --out F1_just887 &


for i in bigfamily*vcf; do
	plink2 --vcf $i --freq cols=+pos --out $i &
	plink2 --vcf $i --geno-counts cols=+pos --out $i &
done

for i in F1*just887.vcf; do
	plink2 --vcf $i --freq cols=+pos --out $i &
	plink2 --vcf $i --geno-counts cols=+pos --out $i &
done

#filter the F1_2019 and F1_2020 VCFs to just 887:
python3 filterVCFtojustoutliers.py trulysharedoutliers20220622.txt.ann.txt F1_2019.recode.vcf > F1_2019_just887.vcf &
python3 filterVCFtojustoutliers.py trulysharedoutliers20220622.txt.ann.txt F1_2020.recode.vcf > F1_2020_just887.vcf &

#mendelplot:
Rscript mendelplot_all6panels.R bigfamily2019_allsnps_F0.recode.vcf.afreq bigfamily2019_allsnps_F1.recode.vcf.afreq bigfamily2019_allsnps_F1.recode.vcf.gcount bigfamily2019_just887_F0.recode.vcf.afreq bigfamily2019_just887_F1.recode.vcf.afreq bigfamily2019_just887_F1.recode.vcf.gcount mendel6panels20220622 &

#mendeltables:
Rscript mendel_makefiles.R bigfamily2019_allsnps_F0.recode.vcf.afreq bigfamily2019_allsnps_F1.recode.vcf.afreq bigfamily2019_allsnps_F1.recode.vcf.gcount bigfamily2019_just887_F0.recode.vcf.afreq bigfamily2019_just887_F1.recode.vcf.afreq bigfamily2019_just887_F1.recode.vcf.gcount 20220726 &

Rscript mendel_makefiles.R bigfamily2020_allsnps_F0.recode.vcf.afreq bigfamily2020_allsnps_F1.recode.vcf.afreq bigfamily2020_allsnps_F1.recode.vcf.gcount bigfamily2020_just887_F0.recode.vcf.afreq bigfamily2020_just887_F1.recode.vcf.afreq bigfamily2020_just887_F1.recode.vcf.gcount bigfamily2020_20220726 &


#hwplot:
Rscript hw_wlines_8panelplot.R ../F0_allsnps_AF.afreq ../F0_allsnps_AF.afreq ../F0_allsnps.recode.vcf_genocounts.gcount ../F0_just652_AF.afreq ../F0_just652_AF.afreq ../F0_just652.recode.vcf_genocounts.gcount 8panelplot 



##generate list of singletons among just the 2020 F0s:
vcftools --vcf F0_2020.recode.vcf --singletons --out singletonfile_F0_2020_20220629 &
##generate vcf for each chimera:
vcftools --keep CA2020-7_S17 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out CA2020-7 &
vcftools --keep CA2020-8_S18 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out CA2020-8 &
vcftools --keep CA2020-16_S16 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out CA2020-16 &
vcftools --keep CA2020-13_S13 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out CA2020-13 &
###and a non-chim comparison:
vcftools --keep CA2020-6_S100 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out CA2020-6 &
vcftools --keep CA2020-10_S104 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out CA2020-10 &
vcftools --keep CA2020-14_S14 --vcf CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf --recode --out CA2020-14 &
for i in CA2020

#match:
python3 Match_chimera_with_singletons.py singletonfile_F0_2020_20220629.singletons CA2020-7.recode.vcf > singletons_found_in_CA2020-7.txt &
python3 Match_chimera_with_singletons.py singletonfile_F0_2020_20220629.singletons CA2020-8.recode.vcf > singletons_found_in_CA2020-8.txt &
python3 Match_chimera_with_singletons.py singletonfile_F0_2020_20220629.singletons CA2020-16.recode.vcf > singletons_found_in_CA2020-16.txt &
python3 Match_chimera_with_singletons.py singletonfile_F0_2020_20220629.singletons CA2020-13.recode.vcf > singletons_found_in_CA2020-13.txt &
python3 Match_chimera_with_singletons.py singletonfile_F0_2020_20220629.singletons CA2020-6.recode.vcf > singletons_found_in_CA2020-6.txt &
python3 Match_chimera_with_singletons.py singletonfile_F0_2020_20220629.singletons CA2020-10.recode.vcf > singletons_found_in_CA2020-10.txt &
python3 Match_chimera_with_singletons.py singletonfile_F0_2020_20220629.singletons CA2020-14.recode.vcf > singletons_found_in_CA2020-14.txt &


#filter vcf to just the sites that are singletons among the 2020 F1s:
python3 filterVCFtojustoutliers.py singletonfile_F0_2020_20220629.singletons CSL_GATHERED_20220617_allsites_genotyped_nomissing_dp10gq30_biSNPs_nodups_nosingletons.recode.vcf.ann.vcf > CSL_GATHERED_just_2020F0sings.ann.vcf
plink --vcf CSL_GATHERED_just_2020F0sings.ann.vcf --genome full --allow-extra-chr --out IBD_just_2020F0sings &

#IBD for all sites, including nonvariant sites:
plink --vcf CSL_GATHERED_20220617_allsites_nomissing_dp10_gqqual30.vcf --genome full --allow-extra-chr --out IBD_allsites &

#all: 12994408
#no bg: 208833
##sharedout_all: 1442
#sharedout_samedir: 887

